using DelimitedFiles
using Test
using ItuRPropagation

struct TestData
    testinput
    answer
end

function testLredAnnual()
    allowablerror = 1.0e-5
    lredannualitudata = [
        TestData((LatLon(3.133, 101.700), 0.10), 3.805251207964440),
        TestData((LatLon(3.133, 101.700), 0.15), 3.744512328605070),
        TestData((LatLon(3.133, 101.700), 0.30), 3.630957765973330),
        TestData((LatLon(3.133, 101.700), 0.35), 3.594946110978350),
        TestData((LatLon(22.900, -43.230), 0.10), 2.829931669185190),
        TestData((LatLon(22.900, -43.230), 0.15), 2.615428330666880),
        TestData((LatLon(22.900, -43.230), 0.30), 2.152560931081480),
        TestData((LatLon(22.900, -43.230), 0.35), 2.030424795739700),
        TestData((LatLon(23.000, 30.000), 0.10), 0.443821013333333),
        TestData((LatLon(23.000, 30.000), 0.15), 0.367758573782867),
        TestData((LatLon(23.000, 30.000), 0.30), 0.252495970370370),
        TestData((LatLon(23.000, 30.000), 0.35), 0.230476913654262),
        TestData((LatLon(25.780, -80.220), 0.10), 3.529275140278520),
        TestData((LatLon(25.780, -80.220), 0.15), 3.368053109432910),
        TestData((LatLon(25.780, -80.220), 0.30), 3.090031166666670),
        TestData((LatLon(25.780, -80.220), 0.35), 2.982802259608770),
        TestData((LatLon(28.717, 77.300), 0.10), 4.230726013688890),
        TestData((LatLon(28.717, 77.300), 0.15), 4.004951664540660),
        TestData((LatLon(28.717, 77.300), 0.30), 3.641943304264690),
        TestData((LatLon(28.717, 77.300), 0.35), 3.550068054385250),
        TestData((LatLon(33.940, 18.430), 0.10), 1.476285676612350),
        TestData((LatLon(33.940, 18.430), 0.15), 1.342662497025860),
        TestData((LatLon(33.940, 18.430), 0.30), 1.117630129357040),
        TestData((LatLon(33.940, 18.430), 0.35), 1.061278891481780),
        TestData((LatLon(41.900, 12.490), 0.10), 1.498459518143210),
        TestData((LatLon(41.900, 12.490), 0.15), 1.411411718957620),
        TestData((LatLon(41.900, 12.490), 0.30), 1.254176127634570),
        TestData((LatLon(41.900, 12.490), 0.35), 1.214239524164980),
        TestData((LatLon(51.500, -0.140), 0.10), 1.903298486617280),
        TestData((LatLon(51.500, -0.140), 0.15), 1.803803603902800),
        TestData((LatLon(51.500, -0.140), 0.30), 1.641289076987650),
        TestData((LatLon(51.500, -0.140), 0.35), 1.593721317853570),
    ]
    println(" ")
    errors = []
    @testset "ituRP840 (Itu-R P.840-8) annual total columnar content of cloud liquid water: ITU test data" begin
        for testdata in lredannualitudata
            value = ItuRP840._columnarcontent(testdata.testinput...)
            error = abs(value - testdata.answer)
            @test error < allowablerror
            push!(errors, error)
        end
    end
    println("LRED MAX ERROR: $(maximum(errors)) kg/m^2")

end

function testACloudAnnual()
    allowablerror = 1.0e-5
    Aclouditudata = [
        TestData((LatLon(51.500, -0.140), 14.250, 1.000, 31.0769912357), 0.455169824452280),
        TestData((LatLon(41.900, 12.490), 14.250, 1.000, 40.2320359964), 0.263385101183578),
        TestData((LatLon(33.940, 18.430), 14.250, 1.000, 46.3596926119), 0.187794088489722),
        TestData((LatLon(51.500, -0.140), 14.250, 0.500, 31.0769912357), 0.534571418282259),
        TestData((LatLon(41.900, 12.490), 14.250, 0.500, 40.2320359964), 0.323038615191573),
        TestData((LatLon(33.940, 18.430), 14.250, 0.500, 46.3596926119), 0.239237966782819),
        TestData((LatLon(51.500, -0.140), 14.250, 0.300, 31.0769912357), 0.591366620536561),
        TestData((LatLon(41.900, 12.490), 14.250, 0.300, 40.2320359964), 0.361147323280203),
        TestData((LatLon(33.940, 18.430), 14.250, 0.300, 46.3596926119), 0.287229102861389),
        TestData((LatLon(51.500, -0.140), 14.250, 0.200, 31.0769912357), 0.624486608743851),
        TestData((LatLon(41.900, 12.490), 14.250, 0.200, 40.2320359964), 0.388639673976116),
        TestData((LatLon(33.940, 18.430), 14.250, 0.200, 46.3596926119), 0.320696768153890),
        TestData((LatLon(51.500, -0.140), 29.000, 1.000, 31.0769912357), 1.772469072969310),
        TestData((LatLon(41.900, 12.490), 29.000, 1.000, 40.2320359964), 1.025643443500570),
        TestData((LatLon(33.940, 18.430), 29.000, 1.000, 46.3596926119), 0.731285766439008),
        TestData((LatLon(51.500, -0.140), 29.000, 0.500, 31.0769912357), 2.081665469231880),
        TestData((LatLon(41.900, 12.490), 29.000, 0.500, 40.2320359964), 1.257939177956040),
        TestData((LatLon(33.940, 18.430), 29.000, 0.500, 46.3596926119), 0.931612498066779),
        TestData((LatLon(51.500, -0.140), 29.000, 0.300, 31.0769912357), 2.302830700494570),
        TestData((LatLon(41.900, 12.490), 29.000, 0.300, 40.2320359964), 1.406337650063000),
        TestData((LatLon(33.940, 18.430), 29.000, 0.300, 46.3596926119), 1.118493964952870),
        TestData((LatLon(51.500, -0.140), 29.000, 0.200, 31.0769912357), 2.431802683347710),
        TestData((LatLon(41.900, 12.490), 29.000, 0.200, 40.2320359964), 1.513395145384380),
        TestData((LatLon(33.940, 18.430), 29.000, 0.200, 46.3596926119), 1.248819831231090),
        TestData((LatLon(22.900, -43.230), 14.250, 1.000, 22.2783346841), 0.541832931168632),
        TestData((LatLon(25.780, -80.220), 14.250, 1.000, 52.6789848590), 0.533175112162811),
        TestData((LatLon(22.900, -43.230), 14.250, 0.500, 22.2783346841), 0.857467924389245),
        TestData((LatLon(25.780, -80.220), 14.250, 0.500, 52.6789848590), 0.639566133080141),
        TestData((LatLon(22.900, -43.230), 14.250, 0.300, 22.2783346841), 1.056027692434960),
        TestData((LatLon(25.780, -80.220), 14.250, 0.300, 52.6789848590), 0.722668928231690),
        TestData((LatLon(22.900, -43.230), 14.250, 0.200, 22.2783346841), 1.208442079213560),
        TestData((LatLon(25.780, -80.220), 14.250, 0.200, 52.6789848590), 0.760937976165280),
        TestData((LatLon(22.900, -43.230), 29.000, 1.000, 22.2783346841), 2.109942403076400),
        TestData((LatLon(25.780, -80.220), 29.000, 1.000, 52.6789848590), 2.076228137317140),
        TestData((LatLon(22.900, -43.230), 29.000, 0.500, 22.2783346841), 3.339051262618280),
        TestData((LatLon(25.780, -80.220), 29.000, 0.500, 52.6789848590), 2.490523602629490),
        TestData((LatLon(22.900, -43.230), 29.000, 0.300, 22.2783346841), 4.112259478739580),
        TestData((LatLon(25.780, -80.220), 29.000, 0.300, 52.6789848590), 2.814132784017280),
        TestData((LatLon(22.900, -43.230), 29.000, 0.200, 22.2783346841), 4.705773750397910),
        TestData((LatLon(25.780, -80.220), 29.000, 0.200, 52.6789848590), 2.963155632787820),
        TestData((LatLon(28.720, 77.300), 14.250, 1.000, 48.2411705405), 0.685600694372315),
        TestData((LatLon(3.130, 101.700), 14.250, 1.000, 85.8045956575), 0.622148155192185),
        TestData((LatLon(9.050, 38.700), 14.250, 1.000, 20.1433580863), 0.657652048065979),
        TestData((LatLon(28.720, 77.300), 14.250, 0.500, 48.2411705405), 0.831794347421585),
        TestData((LatLon(3.130, 101.700), 14.250, 0.500, 85.8045956575), 0.654899202347407),
        TestData((LatLon(9.050, 38.700), 14.250, 0.500, 20.1433580863), 0.718164581262146),
        TestData((LatLon(28.720, 77.300), 14.250, 0.300, 48.2411705405), 0.907730773071015),
        TestData((LatLon(3.130, 101.700), 14.250, 0.300, 85.8045956575), 0.677159283754784),
        TestData((LatLon(9.050, 38.700), 14.250, 0.300, 20.1433580863), 0.752448917420998),
        TestData((LatLon(28.720, 77.300), 14.250, 0.200, 48.2411705405), 0.958302487854227),
        TestData((LatLon(3.130, 101.700), 14.250, 0.200, 85.8045956575), 0.690306141600725),
        TestData((LatLon(9.050, 38.700), 14.250, 0.200, 20.1433580863), 0.771119978339375),
        TestData((LatLon(28.720, 77.300), 29.000, 1.000, 48.2411705405), 2.669786004912580),
        TestData((LatLon(3.130, 101.700), 29.000, 1.000, 85.8045956575), 2.422696551138950),
        TestData((LatLon(9.050, 38.700), 29.000, 1.000, 20.1433580863), 2.560951656614230),
        TestData((LatLon(28.720, 77.300), 29.000, 0.500, 48.2411705405), 3.239076223142770),
        TestData((LatLon(3.130, 101.700), 29.000, 0.500, 85.8045956575), 2.550231846915300),
        TestData((LatLon(9.050, 38.700), 29.000, 0.500, 20.1433580863), 2.796592483082240),
        TestData((LatLon(28.720, 77.300), 29.000, 0.300, 48.2411705405), 3.534778966920680),
        TestData((LatLon(3.130, 101.700), 29.000, 0.300, 85.8045956575), 2.636914451378000),
        TestData((LatLon(9.050, 38.700), 29.000, 0.300, 20.1433580863), 2.930098533493140),
        TestData((LatLon(28.720, 77.300), 29.000, 0.200, 48.2411705405), 3.731709421456260),
        TestData((LatLon(3.130, 101.700), 29.000, 0.200, 85.8045956575), 2.688109406945840),
        TestData((LatLon(9.050, 38.700), 29.000, 0.200, 20.1433580863), 3.002805194303030),
    ]
    println(" ")
    errors = []
    @testset "ituRP840 (Itu-R P.840-8) cloud attenuation Agas: ITU test data" begin
        for testdata in Aclouditudata
            value = ItuRP840.cloudattenuation(testdata.testinput...)
            error = abs(value - testdata.answer)
            @test error < allowablerror
            push!(errors, error)
        end
    end
    println("Agas MAX ERROR: $(maximum(errors)) dB")
end

println("\n<===== " * "ITUR P840.8 "^5 * " =====")
testLredAnnual()
testACloudAnnual()
println("===== " * "ITUR P840.8 "^5 * "=====>\n")
